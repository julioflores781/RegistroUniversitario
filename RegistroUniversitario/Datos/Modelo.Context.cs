//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class registro_universitarioEntities : DbContext
    {
        public registro_universitarioEntities()
            : base("name=registro_universitarioEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<calificaciones> calificaciones { get; set; }
        public virtual DbSet<departamentos> departamentos { get; set; }
        public virtual DbSet<estudiantes> estudiantes { get; set; }
        public virtual DbSet<horarios_clases> horarios_clases { get; set; }
        public virtual DbSet<inscripciones> inscripciones { get; set; }
        public virtual DbSet<materias> materias { get; set; }
        public virtual DbSet<profesores> profesores { get; set; }
    
        public virtual ObjectResult<ConsultarCalificaciones_Result> ConsultarCalificaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCalificaciones_Result>("ConsultarCalificaciones");
        }
    
        public virtual ObjectResult<ConsultarEstudiantes_Result> ConsultarEstudiantes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarEstudiantes_Result>("ConsultarEstudiantes");
        }
    
        public virtual ObjectResult<ConsultarHorariosClases_Result> ConsultarHorariosClases()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarHorariosClases_Result>("ConsultarHorariosClases");
        }
    
        public virtual ObjectResult<ConsultarInscripciones_Result> ConsultarInscripciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarInscripciones_Result>("ConsultarInscripciones");
        }
    
        public virtual ObjectResult<ConsultarMaterias_Result> ConsultarMaterias()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarMaterias_Result>("ConsultarMaterias");
        }
    
        public virtual ObjectResult<ConsultarProfesores_Result> ConsultarProfesores()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProfesores_Result>("ConsultarProfesores");
        }
    
        public virtual int CrearCalificacion(Nullable<int> iD_Estudiante, Nullable<int> iD_Materia, Nullable<decimal> puntuacion, Nullable<System.DateTime> fechaCalificacion)
        {
            var iD_EstudianteParameter = iD_Estudiante.HasValue ?
                new ObjectParameter("ID_Estudiante", iD_Estudiante) :
                new ObjectParameter("ID_Estudiante", typeof(int));
    
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            var puntuacionParameter = puntuacion.HasValue ?
                new ObjectParameter("Puntuacion", puntuacion) :
                new ObjectParameter("Puntuacion", typeof(decimal));
    
            var fechaCalificacionParameter = fechaCalificacion.HasValue ?
                new ObjectParameter("FechaCalificacion", fechaCalificacion) :
                new ObjectParameter("FechaCalificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearCalificacion", iD_EstudianteParameter, iD_MateriaParameter, puntuacionParameter, fechaCalificacionParameter);
        }
    
        public virtual int CrearEstudiante(string nombre, string apellido, string direccion, string correoElectronico, string numeroTelefono)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var numeroTelefonoParameter = numeroTelefono != null ?
                new ObjectParameter("NumeroTelefono", numeroTelefono) :
                new ObjectParameter("NumeroTelefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearEstudiante", nombreParameter, apellidoParameter, direccionParameter, correoElectronicoParameter, numeroTelefonoParameter);
        }
    
        public virtual int CrearHorarioClase(Nullable<int> iD_Materia, Nullable<System.TimeSpan> horaInicio, Nullable<System.TimeSpan> horaFinalizacion, string aula, Nullable<bool> lunes, Nullable<bool> martes, Nullable<bool> miercoles, Nullable<bool> jueves, Nullable<bool> viernes)
        {
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("HoraInicio", horaInicio) :
                new ObjectParameter("HoraInicio", typeof(System.TimeSpan));
    
            var horaFinalizacionParameter = horaFinalizacion.HasValue ?
                new ObjectParameter("HoraFinalizacion", horaFinalizacion) :
                new ObjectParameter("HoraFinalizacion", typeof(System.TimeSpan));
    
            var aulaParameter = aula != null ?
                new ObjectParameter("Aula", aula) :
                new ObjectParameter("Aula", typeof(string));
    
            var lunesParameter = lunes.HasValue ?
                new ObjectParameter("Lunes", lunes) :
                new ObjectParameter("Lunes", typeof(bool));
    
            var martesParameter = martes.HasValue ?
                new ObjectParameter("Martes", martes) :
                new ObjectParameter("Martes", typeof(bool));
    
            var miercolesParameter = miercoles.HasValue ?
                new ObjectParameter("Miercoles", miercoles) :
                new ObjectParameter("Miercoles", typeof(bool));
    
            var juevesParameter = jueves.HasValue ?
                new ObjectParameter("Jueves", jueves) :
                new ObjectParameter("Jueves", typeof(bool));
    
            var viernesParameter = viernes.HasValue ?
                new ObjectParameter("Viernes", viernes) :
                new ObjectParameter("Viernes", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearHorarioClase", iD_MateriaParameter, horaInicioParameter, horaFinalizacionParameter, aulaParameter, lunesParameter, martesParameter, miercolesParameter, juevesParameter, viernesParameter);
        }
    
        public virtual int CrearInscripcion(Nullable<int> iD_Estudiante, Nullable<int> iD_Materia, Nullable<System.DateTime> fechaInscripcion, string estado)
        {
            var iD_EstudianteParameter = iD_Estudiante.HasValue ?
                new ObjectParameter("ID_Estudiante", iD_Estudiante) :
                new ObjectParameter("ID_Estudiante", typeof(int));
    
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            var fechaInscripcionParameter = fechaInscripcion.HasValue ?
                new ObjectParameter("FechaInscripcion", fechaInscripcion) :
                new ObjectParameter("FechaInscripcion", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearInscripcion", iD_EstudianteParameter, iD_MateriaParameter, fechaInscripcionParameter, estadoParameter);
        }
    
        public virtual int CrearMateria(string nombreMateria, string descripcion, string codigoCurso, Nullable<int> creditos, Nullable<int> iD_Profesor)
        {
            var nombreMateriaParameter = nombreMateria != null ?
                new ObjectParameter("NombreMateria", nombreMateria) :
                new ObjectParameter("NombreMateria", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var codigoCursoParameter = codigoCurso != null ?
                new ObjectParameter("CodigoCurso", codigoCurso) :
                new ObjectParameter("CodigoCurso", typeof(string));
    
            var creditosParameter = creditos.HasValue ?
                new ObjectParameter("Creditos", creditos) :
                new ObjectParameter("Creditos", typeof(int));
    
            var iD_ProfesorParameter = iD_Profesor.HasValue ?
                new ObjectParameter("ID_Profesor", iD_Profesor) :
                new ObjectParameter("ID_Profesor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearMateria", nombreMateriaParameter, descripcionParameter, codigoCursoParameter, creditosParameter, iD_ProfesorParameter);
        }
    
        public virtual int CrearProfesor(string nombre, string apellido, string correoElectronico, string numeroTelefono)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var numeroTelefonoParameter = numeroTelefono != null ?
                new ObjectParameter("NumeroTelefono", numeroTelefono) :
                new ObjectParameter("NumeroTelefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CrearProfesor", nombreParameter, apellidoParameter, correoElectronicoParameter, numeroTelefonoParameter);
        }
    
        public virtual int EliminarCalificacion(Nullable<int> iD_Calificacion)
        {
            var iD_CalificacionParameter = iD_Calificacion.HasValue ?
                new ObjectParameter("ID_Calificacion", iD_Calificacion) :
                new ObjectParameter("ID_Calificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCalificacion", iD_CalificacionParameter);
        }
    
        public virtual int EliminarEstudiante(Nullable<int> iD_Estudiante)
        {
            var iD_EstudianteParameter = iD_Estudiante.HasValue ?
                new ObjectParameter("ID_Estudiante", iD_Estudiante) :
                new ObjectParameter("ID_Estudiante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarEstudiante", iD_EstudianteParameter);
        }
    
        public virtual int EliminarHorarioClase(Nullable<int> iD_Horario)
        {
            var iD_HorarioParameter = iD_Horario.HasValue ?
                new ObjectParameter("ID_Horario", iD_Horario) :
                new ObjectParameter("ID_Horario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarHorarioClase", iD_HorarioParameter);
        }
    
        public virtual int EliminarInscripcion(Nullable<int> iD_Inscripcion)
        {
            var iD_InscripcionParameter = iD_Inscripcion.HasValue ?
                new ObjectParameter("ID_Inscripcion", iD_Inscripcion) :
                new ObjectParameter("ID_Inscripcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarInscripcion", iD_InscripcionParameter);
        }
    
        public virtual int EliminarMateria(Nullable<int> iD_Materia)
        {
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarMateria", iD_MateriaParameter);
        }
    
        public virtual int EliminarProfesor(Nullable<int> iD_Profesor)
        {
            var iD_ProfesorParameter = iD_Profesor.HasValue ?
                new ObjectParameter("ID_Profesor", iD_Profesor) :
                new ObjectParameter("ID_Profesor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProfesor", iD_ProfesorParameter);
        }
    
        public virtual int ModificarCalificacion(Nullable<int> iD_Calificacion, Nullable<int> iD_Estudiante, Nullable<int> iD_Materia, Nullable<decimal> puntuacion, Nullable<System.DateTime> fechaCalificacion)
        {
            var iD_CalificacionParameter = iD_Calificacion.HasValue ?
                new ObjectParameter("ID_Calificacion", iD_Calificacion) :
                new ObjectParameter("ID_Calificacion", typeof(int));
    
            var iD_EstudianteParameter = iD_Estudiante.HasValue ?
                new ObjectParameter("ID_Estudiante", iD_Estudiante) :
                new ObjectParameter("ID_Estudiante", typeof(int));
    
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            var puntuacionParameter = puntuacion.HasValue ?
                new ObjectParameter("Puntuacion", puntuacion) :
                new ObjectParameter("Puntuacion", typeof(decimal));
    
            var fechaCalificacionParameter = fechaCalificacion.HasValue ?
                new ObjectParameter("FechaCalificacion", fechaCalificacion) :
                new ObjectParameter("FechaCalificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarCalificacion", iD_CalificacionParameter, iD_EstudianteParameter, iD_MateriaParameter, puntuacionParameter, fechaCalificacionParameter);
        }
    
        public virtual int ModificarEstudiante(Nullable<int> iD_Estudiante, string nombre, string apellido, string direccion, string correoElectronico, string numeroTelefono)
        {
            var iD_EstudianteParameter = iD_Estudiante.HasValue ?
                new ObjectParameter("ID_Estudiante", iD_Estudiante) :
                new ObjectParameter("ID_Estudiante", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var numeroTelefonoParameter = numeroTelefono != null ?
                new ObjectParameter("NumeroTelefono", numeroTelefono) :
                new ObjectParameter("NumeroTelefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarEstudiante", iD_EstudianteParameter, nombreParameter, apellidoParameter, direccionParameter, correoElectronicoParameter, numeroTelefonoParameter);
        }
    
        public virtual int ModificarHorarioClase(Nullable<int> iD_Horario, Nullable<int> iD_Materia, Nullable<System.TimeSpan> horaInicio, Nullable<System.TimeSpan> horaFinalizacion, string aula, Nullable<bool> lunes, Nullable<bool> martes, Nullable<bool> miercoles, Nullable<bool> jueves, Nullable<bool> viernes)
        {
            var iD_HorarioParameter = iD_Horario.HasValue ?
                new ObjectParameter("ID_Horario", iD_Horario) :
                new ObjectParameter("ID_Horario", typeof(int));
    
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            var horaInicioParameter = horaInicio.HasValue ?
                new ObjectParameter("HoraInicio", horaInicio) :
                new ObjectParameter("HoraInicio", typeof(System.TimeSpan));
    
            var horaFinalizacionParameter = horaFinalizacion.HasValue ?
                new ObjectParameter("HoraFinalizacion", horaFinalizacion) :
                new ObjectParameter("HoraFinalizacion", typeof(System.TimeSpan));
    
            var aulaParameter = aula != null ?
                new ObjectParameter("Aula", aula) :
                new ObjectParameter("Aula", typeof(string));
    
            var lunesParameter = lunes.HasValue ?
                new ObjectParameter("Lunes", lunes) :
                new ObjectParameter("Lunes", typeof(bool));
    
            var martesParameter = martes.HasValue ?
                new ObjectParameter("Martes", martes) :
                new ObjectParameter("Martes", typeof(bool));
    
            var miercolesParameter = miercoles.HasValue ?
                new ObjectParameter("Miercoles", miercoles) :
                new ObjectParameter("Miercoles", typeof(bool));
    
            var juevesParameter = jueves.HasValue ?
                new ObjectParameter("Jueves", jueves) :
                new ObjectParameter("Jueves", typeof(bool));
    
            var viernesParameter = viernes.HasValue ?
                new ObjectParameter("Viernes", viernes) :
                new ObjectParameter("Viernes", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarHorarioClase", iD_HorarioParameter, iD_MateriaParameter, horaInicioParameter, horaFinalizacionParameter, aulaParameter, lunesParameter, martesParameter, miercolesParameter, juevesParameter, viernesParameter);
        }
    
        public virtual int ModificarInscripcion(Nullable<int> iD_Inscripcion, Nullable<int> iD_Estudiante, Nullable<int> iD_Materia, Nullable<System.DateTime> fechaInscripcion, string estado)
        {
            var iD_InscripcionParameter = iD_Inscripcion.HasValue ?
                new ObjectParameter("ID_Inscripcion", iD_Inscripcion) :
                new ObjectParameter("ID_Inscripcion", typeof(int));
    
            var iD_EstudianteParameter = iD_Estudiante.HasValue ?
                new ObjectParameter("ID_Estudiante", iD_Estudiante) :
                new ObjectParameter("ID_Estudiante", typeof(int));
    
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            var fechaInscripcionParameter = fechaInscripcion.HasValue ?
                new ObjectParameter("FechaInscripcion", fechaInscripcion) :
                new ObjectParameter("FechaInscripcion", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarInscripcion", iD_InscripcionParameter, iD_EstudianteParameter, iD_MateriaParameter, fechaInscripcionParameter, estadoParameter);
        }
    
        public virtual int ModificarMateria(Nullable<int> iD_Materia, string nombreMateria, string descripcion, string codigoCurso, Nullable<int> creditos, Nullable<int> iD_Profesor)
        {
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            var nombreMateriaParameter = nombreMateria != null ?
                new ObjectParameter("NombreMateria", nombreMateria) :
                new ObjectParameter("NombreMateria", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var codigoCursoParameter = codigoCurso != null ?
                new ObjectParameter("CodigoCurso", codigoCurso) :
                new ObjectParameter("CodigoCurso", typeof(string));
    
            var creditosParameter = creditos.HasValue ?
                new ObjectParameter("Creditos", creditos) :
                new ObjectParameter("Creditos", typeof(int));
    
            var iD_ProfesorParameter = iD_Profesor.HasValue ?
                new ObjectParameter("ID_Profesor", iD_Profesor) :
                new ObjectParameter("ID_Profesor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarMateria", iD_MateriaParameter, nombreMateriaParameter, descripcionParameter, codigoCursoParameter, creditosParameter, iD_ProfesorParameter);
        }
    
        public virtual int ModificarProfesor(Nullable<int> iD_Profesor, string nombre, string apellido, string correoElectronico, string numeroTelefono)
        {
            var iD_ProfesorParameter = iD_Profesor.HasValue ?
                new ObjectParameter("ID_Profesor", iD_Profesor) :
                new ObjectParameter("ID_Profesor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var numeroTelefonoParameter = numeroTelefono != null ?
                new ObjectParameter("NumeroTelefono", numeroTelefono) :
                new ObjectParameter("NumeroTelefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarProfesor", iD_ProfesorParameter, nombreParameter, apellidoParameter, correoElectronicoParameter, numeroTelefonoParameter);
        }
    
        public virtual ObjectResult<ReporteEstudiantesMateriasCalificaciones_Result> ReporteEstudiantesMateriasCalificaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteEstudiantesMateriasCalificaciones_Result>("ReporteEstudiantesMateriasCalificaciones");
        }
    
        public virtual ObjectResult<ReporteEstudiantesMateriasHorarios_Result> ReporteEstudiantesMateriasHorarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteEstudiantesMateriasHorarios_Result>("ReporteEstudiantesMateriasHorarios");
        }
    }
}
